{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./home.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./home.component.css?ngResource\";\nimport { HttpClient } from '@angular/common/http';\nimport { Inject } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { environment } from '../../environments/environment';\nlet HomeComponent = (_class = class HomeComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.hackerNewsData = [];\n    this.pagedItems = [];\n    this.itemsPerPage = 10;\n    this.p = 1;\n    this.searchText = '';\n    this.loading = true;\n    this.apiUrl = '';\n    this.apiUrl = `${environment.apiBaseUrl}/api/hackernews/new-stories`;\n    console.log(this.apiUrl);\n  }\n  ngOnInit() {\n    this.http.get(this.apiUrl).subscribe(data => {\n      this.hackerNewsData = data;\n      this.totalNews = data.length;\n      this.pagedItems = data;\n      this.loading = false;\n    });\n  }\n  filterByTitle() {\n    this.pagedItems = this.hackerNewsData.filter(item => item.title.toLowerCase().includes(this.searchText.toLowerCase()));\n  }\n  setPage(page) {\n    if (page < 1 || page > this.totalPages) {\n      return;\n    }\n    const startIndex = (page - 1) * this.itemsPerPage;\n    const endIndex = Math.min(startIndex + this.itemsPerPage, this.hackerNewsData.length);\n    this.pagedItems = this.hackerNewsData.slice(startIndex, endIndex);\n    this.p = page;\n  }\n  get totalPages() {\n    return Math.ceil(this.hackerNewsData.length / this.itemsPerPage);\n  }\n}, _class.ctorParameters = () => [{\n  type: HttpClient\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: ['BASE_URL']\n  }]\n}], _class);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";;;;AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,MAAM,QAAgB,eAAe;AAC9C,SAASC,SAAS,QAAQ,eAAe;AAEzC,SAASC,WAAW,QAAQ,gCAAgC;AAOrD,IAAMC,aAAa,aAAnB,MAAMA,aAAa;EAWxBC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IATxB,mBAAc,GAAU,EAAE;IAC1B,eAAU,GAAU,EAAE;IACtB,iBAAY,GAAW,EAAE;IACzB,MAAC,GAAW,CAAC;IAEb,eAAU,GAAG,EAAE;IACf,YAAO,GAAY,IAAI;IACvB,WAAM,GAAW,EAAE;IAGjB,IAAI,CAACE,MAAM,GAAG,GAAGL,WAAW,CAACM,UAAU,6BAA6B;IACpEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC;EAC1B;EAEAI,QAAQ;IACN,IAAI,CAACN,IAAI,CAACO,GAAG,CAAQ,IAAI,CAACL,MAAM,CAAC,CAC9BM,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,cAAc,GAAGD,IAAI;MAC1B,IAAI,CAACE,SAAS,GAAGF,IAAI,CAACG,MAAM;MAC5B,IAAI,CAACC,UAAU,GAAGJ,IAAI;MACtB,IAAI,CAACK,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;EACN;EAEAC,aAAa;IACX,IAAI,CAACF,UAAU,GAAG,IAAI,CAACH,cAAc,CAACM,MAAM,CAAEC,IAAI,IAChDA,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACC,UAAU,CAACF,WAAW,EAAE,CAAC,CACjE;EACH;EAEAG,OAAO,CAACC,IAAY;IAClB,IAAIA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,IAAI,CAACC,UAAU,EAAE;MACtC;;IAEF,MAAMC,UAAU,GAAG,CAACF,IAAI,GAAG,CAAC,IAAI,IAAI,CAACG,YAAY;IACjD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACJ,UAAU,GAAG,IAAI,CAACC,YAAY,EAAE,IAAI,CAAChB,cAAc,CAACE,MAAM,CAAC;IACrF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,cAAc,CAACoB,KAAK,CAACL,UAAU,EAAEE,QAAQ,CAAC;IACjE,IAAI,CAACI,CAAC,GAAGR,IAAI;EACf;EAEA,IAAIC,UAAU;IACZ,OAAOI,IAAI,CAACI,IAAI,CAAC,IAAI,CAACtB,cAAc,CAACE,MAAM,GAAG,IAAI,CAACc,YAAY,CAAC;EAClE;;;;;;UAjCuC/B,MAAM;IAAAsC,OAAC,UAAU;EAAA;AAAA;AAX7CnC,aAAa,eALzBF,SAAS,CAAC;EACTsC,QAAQ,EAAE,UAAU;EACpBC,8BAAoC;;CAErC,CAAC,GACWrC,aAAa,CA6CzB;SA7CYA,aAAa","names":["HttpClient","Inject","Component","environment","HomeComponent","constructor","http","baseUrl","apiUrl","apiBaseUrl","console","log","ngOnInit","get","subscribe","data","hackerNewsData","totalNews","length","pagedItems","loading","filterByTitle","filter","item","title","toLowerCase","includes","searchText","setPage","page","totalPages","startIndex","itemsPerPage","endIndex","Math","min","slice","p","ceil","args","selector","template"],"sourceRoot":"","sources":["C:\\Users\\mafernandez\\OneDrive - ENDAVA\\Documents\\ChallengeHackerNews\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Inject, OnInit } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  hackerNewsData: any[] = [];\r\n  pagedItems: any[] = [];\r\n  itemsPerPage: number = 10;\r\n  p: number = 1;\r\n  totalNews: any;\r\n  searchText = '';\r\n  loading: boolean = true;\r\n  apiUrl: string = '';\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.apiUrl = `${environment.apiBaseUrl}/api/hackernews/new-stories`;\r\n    console.log(this.apiUrl);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get<any[]>(this.apiUrl)\r\n      .subscribe(data => {\r\n        this.hackerNewsData = data;\r\n        this.totalNews = data.length;\r\n        this.pagedItems = data;\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  filterByTitle(): void {\r\n    this.pagedItems = this.hackerNewsData.filter((item =>\r\n      item.title.toLowerCase().includes(this.searchText.toLowerCase()))\r\n    );\r\n  }\r\n\r\n  setPage(page: number): void {\r\n    if (page < 1 || page > this.totalPages) {\r\n      return;\r\n    }\r\n    const startIndex = (page - 1) * this.itemsPerPage;\r\n    const endIndex = Math.min(startIndex + this.itemsPerPage, this.hackerNewsData.length);\r\n    this.pagedItems = this.hackerNewsData.slice(startIndex, endIndex);\r\n    this.p = page;\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.hackerNewsData.length / this.itemsPerPage);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}